@model AdminDashboard.Models.PackageModel
@{
    ViewData["Title"] = "Create Package";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="col-lg-9 col-md-12 px-4 mt-3">

    <h1>
        Create Package
    </h1>
    <form asp-action="Create" asp-controller="Packages" class="row g-3 mt-5" enctype="multipart/form-data">
        <div class="col-md-6">
            <label for="Name" class="form-label">@Html.DisplayNameFor(x=>x.Name):</label>
            <input asp-for="Name" class="form-control" name="Name" id="Name" />
        </div>
        <div class="col-md-2">
            <label for="Price" class="form-label">@Html.DisplayNameFor(x=>x.Price):</label>
            <input asp-for="Price" class="form-control" name="Price" id="Price" type="number" />
        </div>
        <div class="col-md-2">
            <label for="Discount" class="form-label">@Html.DisplayNameFor(x=>x.Discount):</label>
            <input asp-for="Discount" class="form-control" name="Discount" id="Price" type="number" />
        </div>
        <div class="col-md-6">
            <label for="Description" class="form-label">@Html.DisplayNameFor(x=>x.Description):</label>
            <textarea asp-for="Description" class="form-control" id="Description"></textarea>
        </div>
        <div class="col-md-2">
            <label for="NumberOfDays" class="form-label">@Html.DisplayNameFor(x=>x.NumberOfDays):</label>
            <input asp-for="NumberOfDays" class="form-control" name="NumberOfDays" id="NumberOfDays" type="number" />
        </div>
        <div class="col-md-2">
            <label for="NumberOfNights" class="form-label">@Html.DisplayNameFor(x=>x.NumberOfNights):</label>
            <input asp-for="NumberOfNights" class="form-control" name="NumberOfNights" id="Price" type="number" />
        </div>
        <div class="col-lg-4 mb-2">
            <label for="PackageTypeId" class="form-label">Package Type</label>
@*             <select id="PackageTypeId" class="form-select">
                @foreach (var type in ViewBag.PackageTypes)
                {
                    <option value="@type.Value">@type.Text</option>
                }
            </select> *@
            @Html.DropDownListFor(c => c.PackageTypeId, (IEnumerable<SelectListItem>)ViewBag.PackageTypes,new{@class="form-control"})

        </div>
        <div class="col-lg-4 mb-2">
            <label for="RoomClassId" class="form-label">Hotel Room Class</label>
@*             <select id="RoomClassId" class="form-select">
                @foreach (var roomClass in ViewBag.RoomClass)
                {
                    <option value="@roomClass.Value">@roomClass.Text</option>
                }
            </select> *@
            @Html.DropDownListFor(c => c.RoomClassId, (IEnumerable<SelectListItem>)ViewBag.RoomClass,new{@class="form-control"})
        </div>
        <div class="mb-3">
            <label for="formFile" class="form-label">Upload Main Image</label>
            <input asp-for="PackageMainImageFile" class="form-control" id="PackageMainImageFile" />
        </div>
        <div class="mb-3">
            <label for="formFileMultiple" class="form-label">Upload Multiple Images</label>
            <input asp-for="PackageImages" class="form-control" id="PackageImages" multiple onchange="limitAndHandleFileSelection(this, 3)"/>
        </div>
        <h2>About The Package</h2>
        <div>
            <button class="btn1" style="border: none;" onclick="addDay(event)"><i class='bx bx-message-square-add'></i> Add Day</button>
            <h5 class="mt-4">Use a mark (//) to separate lines in the Description.</h5>
        </div>


        <div id="dayContainer">
            <h5>Day 1</h5>
            <div class="col-md-4">
                <label for="day1title" class="form-label">Title</label>
                <input type="text" class="form-control" id="day1title">
            </div>
            <div class="col-md-6">
                <label for="day1description" class="form-label">Description</label>
                <textarea type="text" class="form-control" id="day1description"></textarea>
            </div>
            <div class="col-md-2">
                <label for="cities" class="form-label">City</label>
                <select id="cities1" class="form-select">
                    @{
                    foreach(var city in ViewBag.Cities)
                    {
                                    <option value="@city.Value" id="city1">@city.Text</option>
                    }
                }
                </select>
            </div>
        </div>

        <div class="col-12">
            <label for="IsPublished" class="form-label">@Html.DisplayNameFor(x=>x.IsPublished):</label>
            <div class="col-sm-10">
                <div class="form-check">
                    <input asp-for="IsPublished" class="form-check-input" type="checkbox" name="IsPublished" id="IsPublished" />
                </div>
            </div>
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary" id="submitButton">Submit</button>
        </div>
    </form>
</div>
<script>

    function limitFileSelection(input, maxCount) {
        if (input.files.length > maxCount) {
            input.value = "";
            alert("You can only upload a maximum of " + maxCount + " files");
        }
    }

    var dayCounter = 2; 
    function addDay(event) {
        event.preventDefault();

        var dayTitle = document.createElement("h5");
        dayTitle.textContent = "Day " + dayCounter;

        var titleDiv = document.createElement("div");
        titleDiv.classList.add("col-md-4");

        var titleLabel = document.createElement("label");
        titleLabel.classList.add("form-label");
        titleLabel.textContent = "Title";
        titleLabel.setAttribute("for", "day" + dayCounter + "title"); 
        titleDiv.appendChild(titleLabel);

        var titleInput = document.createElement("input");
        titleInput.type = "text";
        titleInput.classList.add("form-control");
        titleInput.id = "day" + dayCounter+"title";
        titleDiv.appendChild(titleInput);

        var descriptionDiv = document.createElement("div");
        descriptionDiv.classList.add("col-md-6");

        var descriptionLabel = document.createElement("label");
        descriptionLabel.classList.add("form-label");
        descriptionLabel.textContent = "Description";
        descriptionLabel.setAttribute("for", "day" + dayCounter + "description"); 
        descriptionDiv.appendChild(descriptionLabel);

        var descriptionTextarea = document.createElement("textarea");
        descriptionTextarea.type = "text";
        descriptionTextarea.classList.add("form-control");
        descriptionTextarea.id = "day" + dayCounter + "description";
        descriptionDiv.appendChild(descriptionTextarea);

    @{
        var citiesJson = Json.Serialize(ViewBag.Cities);
    }
        var cityLable = document.createElement("label");
        cityLable.classList.add("form-label");
        cityLable.textContent = "City";
        cityLable.setAttribute("for", "day" + dayCounter + "description");
        var citiesDiv = document.createElement("div");
        citiesDiv.classList.add("col-md-2");
        var selectList = document.createElement("select");
        selectList.id = "cities" + dayCounter;
        selectList.classList.add("form-select");

        var cities = @Html.Raw(citiesJson);
        debugger;
        for (var i = 0; i < cities.length; i++) {
            var option = document.createElement("option");
            option.value = cities[i].value;
            option.text = cities[i].text;
            option.id = "city" + dayCounter;
            selectList.appendChild(option);
        }
        citiesDiv.appendChild(cityLable);
        citiesDiv.appendChild(selectList);





        var dayContainer = document.getElementById("dayContainer");
        dayContainer.appendChild(dayTitle);
        dayContainer.appendChild(titleDiv);
        dayContainer.appendChild(descriptionDiv);
        dayContainer.appendChild(citiesDiv);

        dayCounter++;
    }

    function getDaysData() {
        debugger;
        event.preventDefault();
        var days = [];
        for (var i = 1; i < dayCounter; i++) {
            var day = {
                Title: document.getElementById("day" + i+"title").value,
                Description: document.getElementById("day" + i + "description").value,
                CityId: document.getElementById("cities"+i).value
            };
            days.push(day);
        }
        return days;
    }


    document.getElementById("submitButton").addEventListener("click", function () {
        document.getElementById("AboutPackage").value = JSON.stringify(getDaysData());
    });

    function limitAndHandleFileSelection(input, maxCount) {
        limitFileSelection(input, maxCount);

        var files = input.files;

        var imageArray = [];

        for (var i = 0; i < files.length; i++) {
            var file = files[i];

            var imageObject = {
                fileName: file.name,
                fileSize: file.size,
                fileType: file.type
            };

            imageArray.push(imageObject);
        }

        console.log(imageArray);
    }

    function limitFileSelection(input, maxCount) {
        if (input.files.length > maxCount) {
            input.value = "";
            alert("You can only upload a maximum of " + maxCount + " files");
        }
    }
</script>
<!-- ... Your existing HTML ... -->

<script>
    // ... Your existing JavaScript ...

    document.getElementById("submitButton").addEventListener("click", function (event) {
        event.preventDefault();

        // Assuming you have an endpoint to handle the form data on the server-side
        var endpoint = "/Packages/Create";

        // Collect form data, including dynamically added days data
        var formData = new FormData(document.querySelector('form'));
        formData.append("AboutPackage", JSON.stringify(getDaysData()));

        // Make AJAX request
        fetch(endpoint, {
            method: 'POST',
            body: formData,
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log(data);
                location.reload();
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
    });
</script>
